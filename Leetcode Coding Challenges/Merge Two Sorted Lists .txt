/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1 == null){
            return l2;
        } else if ( l2 == null){
            return l1;
        }
        ListNode result, curr, follow, other, otherFollow;
        
        if(l1.val <= l2.val){
            result = l1; curr = l1; follow = l1.next;
            other = l2;
            otherFollow = l2.next;
        } else {
            result = l2; curr = l2; follow = l2.next;
            other = l1;
            otherFollow = l1.next;
        }
        

        
        while (otherFollow != null || other != null){
            if (follow == null){
                curr.next = other;
                return result;
            } else if( other == null){
                return result;
            }
            
            if(follow.val <= other.val){
                curr = follow;
                follow = follow.next;
            } else {
                curr.next = other;
                curr = curr.next;
                other.next = follow;
                other = otherFollow;
                if(otherFollow != null){
                    otherFollow = otherFollow.next;
                } else {
                    return result;
                }

            }
        }
        
        return result;
        
        
    }
    
//     public ListNode compareNode(ListNode head, ListNode l1, ListNode l2){
//         ListNode node = new Listnode(0);
        
//         if (l1 != null && l2 != null){
//             if(l1.val <= l2.val){
//                 node.val = l1.val;
//             } else {
//                 node.val = l2.val;
//             }
//         }
//     }
}