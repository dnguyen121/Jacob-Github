/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head == null){
            return null;
        }
        int size = lastNode(head);
        if(size == n){
            return head.next;
        }
        
        int indexPrevious = size - n-1;
        ListNode prev = prevNode(head,indexPrevious);
        ListNode curr = prev.next;
        prev.next = curr.next;
        curr.next = null;
        return head;
        
        
    }
    
    public int lastNode(ListNode head){
        ListNode curr = head;
        int i = 1;
        while(curr.next != null){
            curr = curr.next;
            i++;
        }
        return i;
    }
    
    public ListNode prevNode(ListNode head, int index){
        ListNode curr = head;
        while(index > 0){
            curr = curr.next;
            index--;
        }
        return curr;
    }
}